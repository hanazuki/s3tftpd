name: Test

on:
  schedule:
    - cron: '0 15 * * 5'
  push:
    branches:
      - '*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-
    - name: Prepare
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y tftp-hpa asciidoctor
    - name: Install
      run: |
        bundle config set deployment true
        bundle config set path vendor/bundle
        bundle install --jobs 4 --retry 3
    - name: Build
      run: |
        make
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - name: Test
      run: |
        bundle exec rspec
      env:
        TEST_BUCKET_NAME: hanazuki-s3tftpd-test

  docker:
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
    - id: config
      shell: bash
      run: |
        push=false
        tags=
        if [[ $GITHUB_EVENT_NAME == push ]]; then
          if [[ $GITHUB_REF == refs/heads/master ]]; then
            push=true
            tags=ghcr.io/${GITHUB_REPOSITORY}:testing
          elif [[ $GITHUB_REF == refs/tags/v* ]]; then
            push=true
            tags=ghcr.io/${GITHUB_REPOSITORY}:${GITHUB_REF#refs/tags/v}%0Aghcr.io/${GITHUB_REPOSITORY}:latest
          fi
        fi
        echo "::set-output name=push::$push"
        echo "::set-output name=tags::$tags"
    - uses: docker/setup-qemu-action@v1
    - uses: docker/setup-buildx-action@v1
    - uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ github.token }}
    - uses: docker/build-push-action@v2
      with:
        push: ${{ steps.config.outputs.push }}
        tags: ${{ steps.config.outputs.tags }}
        platforms: linux/amd64,linux/arm64
        labels: |
          org.opencontainers.image.source=${{ github.event.repository.html_url }}
          org.opencontainers.image.revision=${{ github.sha }}
